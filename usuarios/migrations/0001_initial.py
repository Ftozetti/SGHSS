# Generated by Django 5.2 on 2025-05-10 17:59

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Sala',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=10, unique=True, verbose_name='Número da Sala')),
                ('tipo', models.CharField(choices=[('consulta', 'Consulta'), ('exame', 'Exame')], max_length=10, verbose_name='Tipo')),
                ('equipamentos', models.TextField(blank=True, null=True, verbose_name='Equipamentos Instalados')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cpf', models.CharField(max_length=14, unique=True)),
                ('telefone', models.CharField(max_length=20)),
                ('rua', models.CharField(max_length=100)),
                ('numero', models.CharField(max_length=10)),
                ('bairro', models.CharField(max_length=50)),
                ('cidade', models.CharField(max_length=50)),
                ('estado', models.CharField(max_length=2)),
                ('cep', models.CharField(max_length=9)),
                ('role', models.CharField(choices=[('paciente', 'Paciente'), ('medico', 'Médico'), ('administrativo', 'Administrativo'), ('financeiro', 'Financeiro')], max_length=20)),
                ('plano_saude', models.CharField(blank=True, max_length=50, null=True)),
                ('numero_cartao_plano', models.CharField(blank=True, max_length=30, null=True)),
                ('crm', models.CharField(blank=True, max_length=20, null=True)),
                ('especialidade', models.CharField(blank=True, max_length=50, null=True)),
                ('setor', models.CharField(blank=True, max_length=50, null=True)),
                ('cargo', models.CharField(blank=True, max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AgendaConsulta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('horario_inicio', models.TimeField()),
                ('horario_fim', models.TimeField()),
                ('duracao_procedimento', models.PositiveIntegerField(help_text='Duração em minutos')),
                ('status_manual', models.CharField(choices=[('livre', 'Livre'), ('agendado', 'Agendado'), ('bloqueado', 'Bloqueado')], default='livre', max_length=20)),
                ('medico', models.ForeignKey(limit_choices_to={'role': 'medico'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('sala', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='usuarios.sala')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AgendaExame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('horario_inicio', models.TimeField()),
                ('horario_fim', models.TimeField()),
                ('duracao_procedimento', models.PositiveIntegerField(help_text='Duração em minutos')),
                ('status_manual', models.CharField(choices=[('livre', 'Livre'), ('agendado', 'Agendado'), ('bloqueado', 'Bloqueado')], default='livre', max_length=20)),
                ('tipo_exame', models.CharField(choices=[('radiografia', 'Radiografia'), ('ultrassonografia', 'Ultrassonografia'), ('tomografia', 'Tomografia Computadorizada'), ('mamografia', 'Mamografia'), ('doppler', 'Doppler')], max_length=30)),
                ('medico', models.ForeignKey(blank=True, limit_choices_to={'role': 'medico'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('sala', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='usuarios.sala')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Consulta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('agendada', 'Agendada'), ('cancelada', 'Cancelada'), ('em_andamento', 'Em atendimento'), ('finalizada', 'Finalizada')], default='agendada', max_length=20)),
                ('observacoes_visiveis', models.TextField(blank=True, null=True)),
                ('observacoes_internas', models.TextField(blank=True, null=True)),
                ('encaminhamento', models.TextField(blank=True, null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('motivo_cancelamento', models.TextField(blank=True, null=True)),
                ('data_cancelamento', models.DateTimeField(blank=True, null=True)),
                ('valor', models.DecimalField(decimal_places=2, default=250.0, max_digits=8)),
                ('agenda', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='consultas', to='usuarios.agendaconsulta')),
                ('cancelado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consultas_canceladas', to=settings.AUTH_USER_MODEL)),
                ('medico', models.ForeignKey(limit_choices_to={'role': 'medico'}, on_delete=django.db.models.deletion.CASCADE, related_name='consultas_como_medico', to=settings.AUTH_USER_MODEL)),
                ('paciente', models.ForeignKey(limit_choices_to={'role': 'paciente'}, on_delete=django.db.models.deletion.CASCADE, related_name='consultas_como_paciente', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Atestado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conteudo', models.TextField()),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('arquivo_pdf', models.FileField(blank=True, null=True, upload_to='documentos/atestados/')),
                ('medico', models.ForeignKey(limit_choices_to={'role': 'medico'}, on_delete=django.db.models.deletion.CASCADE, related_name='atestados_emitidos', to=settings.AUTH_USER_MODEL)),
                ('paciente', models.ForeignKey(limit_choices_to={'role': 'paciente'}, on_delete=django.db.models.deletion.CASCADE, related_name='atestados_recebidos', to=settings.AUTH_USER_MODEL)),
                ('consulta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atestados', to='usuarios.consulta')),
            ],
        ),
        migrations.CreateModel(
            name='Exame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('agendada', 'Agendada'), ('cancelada', 'Cancelada'), ('em_andamento', 'Em atendimento'), ('finalizada', 'Finalizada')], default='agendada', max_length=20)),
                ('observacoes_visiveis', models.TextField(blank=True, null=True)),
                ('observacoes_internas', models.TextField(blank=True, null=True)),
                ('encaminhamento', models.TextField(blank=True, null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('motivo_cancelamento', models.TextField(blank=True, null=True)),
                ('data_cancelamento', models.DateTimeField(blank=True, null=True)),
                ('tipo', models.CharField(choices=[('radiografia', 'Radiografia (Raio-X)'), ('ultrassonografia', 'Ultrassonografia'), ('tomografia', 'Tomografia Computadorizada (TC)'), ('mamografia', 'Mamografia'), ('doppler', 'Doppler (Ultrassom Vascular)')], max_length=30)),
                ('valor', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('agenda', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exames', to='usuarios.agendaexame')),
                ('cancelado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exames_cancelados', to=settings.AUTH_USER_MODEL)),
                ('medico', models.ForeignKey(blank=True, limit_choices_to={'role': 'medico'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exames_como_medico', to=settings.AUTH_USER_MODEL)),
                ('paciente', models.ForeignKey(limit_choices_to={'role': 'paciente'}, on_delete=django.db.models.deletion.CASCADE, related_name='exames_como_paciente', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Laudo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conteudo', models.TextField()),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('arquivo_pdf', models.FileField(blank=True, null=True, upload_to='documentos/laudos/')),
                ('consulta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='laudos', to='usuarios.consulta')),
                ('medico', models.ForeignKey(limit_choices_to={'role': 'medico'}, on_delete=django.db.models.deletion.CASCADE, related_name='laudos_emitidos', to=settings.AUTH_USER_MODEL)),
                ('paciente', models.ForeignKey(limit_choices_to={'role': 'paciente'}, on_delete=django.db.models.deletion.CASCADE, related_name='laudos_recebidos', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Prontuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alergias', models.TextField(blank=True)),
                ('tratamentos', models.TextField(blank=True)),
                ('historico_cirurgias', models.TextField(blank=True)),
                ('observacoes_medicas', models.TextField(blank=True)),
                ('paciente', models.OneToOneField(limit_choices_to={'role': 'paciente'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Receita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conteudo', models.TextField()),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('arquivo_pdf', models.FileField(blank=True, null=True, upload_to='documentos/receitas/')),
                ('consulta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receitas', to='usuarios.consulta')),
                ('medico', models.ForeignKey(limit_choices_to={'role': 'medico'}, on_delete=django.db.models.deletion.CASCADE, related_name='receitas_emitidas', to=settings.AUTH_USER_MODEL)),
                ('paciente', models.ForeignKey(limit_choices_to={'role': 'paciente'}, on_delete=django.db.models.deletion.CASCADE, related_name='receitas_recebidas', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AgendaTeleconsulta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('horario_inicio', models.TimeField()),
                ('horario_fim', models.TimeField()),
                ('duracao_procedimento', models.PositiveIntegerField(help_text='Duração em minutos')),
                ('status_manual', models.CharField(choices=[('livre', 'Livre'), ('agendado', 'Agendado'), ('bloqueado', 'Bloqueado')], default='livre', max_length=20)),
                ('medico', models.ForeignKey(limit_choices_to={'role': 'medico'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('sala', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='usuarios.sala')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Teleconsulta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('agendada', 'Agendada'), ('cancelada', 'Cancelada'), ('em_andamento', 'Em atendimento'), ('finalizada', 'Finalizada')], default='agendada', max_length=20)),
                ('observacoes_visiveis', models.TextField(blank=True, null=True)),
                ('observacoes_internas', models.TextField(blank=True, null=True)),
                ('encaminhamento', models.TextField(blank=True, null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('motivo_cancelamento', models.TextField(blank=True, null=True)),
                ('data_cancelamento', models.DateTimeField(blank=True, null=True)),
                ('valor', models.DecimalField(decimal_places=2, default=125.0, max_digits=8)),
                ('agenda', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='teleconsultas', to='usuarios.agendateleconsulta')),
                ('cancelado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teleconsultas_canceladas', to=settings.AUTH_USER_MODEL)),
                ('medico', models.ForeignKey(limit_choices_to={'role': 'medico'}, on_delete=django.db.models.deletion.CASCADE, related_name='teleconsultas_como_medico', to=settings.AUTH_USER_MODEL)),
                ('paciente', models.ForeignKey(limit_choices_to={'role': 'paciente'}, on_delete=django.db.models.deletion.CASCADE, related_name='teleconsultas_como_paciente', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
